{
    "federation:missing": [
        "eodc"
    ],
    "jobs": [
        {
            "id": "a3cca2b2aa1e3b5b",
            "title": "NDVI based on Sentinel 2",
            "description": "Deriving minimum NDVI measurements over pixel time series of Sentinel 2",
            "process": {
                "id": "ndvi",
                "summary": "string",
                "description": "string",
                "parameters": [
                    {
                        "schema": {
                            "subtype": "string",
                            "deprecated": false,
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "$id": "http://example.com",
                            "type": "array",
                            "pattern": "/regex/",
                            "enum": [
                                null
                            ],
                            "minimum": 0,
                            "maximum": 0,
                            "minItems": 0,
                            "maxItems": 0,
                            "items": [
                                {}
                            ],
                            "property1": null,
                            "property2": null
                        },
                        "name": "^\\w$",
                        "description": "string",
                        "optional": false,
                        "deprecated": false,
                        "experimental": false,
                        "default": null
                    }
                ],
                "returns": {
                    "description": "string",
                    "schema": {
                        "subtype": "string",
                        "deprecated": false,
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "$id": "http://example.com",
                        "type": "array",
                        "pattern": "/regex/",
                        "enum": [
                            null
                        ],
                        "minimum": 0,
                        "maximum": 0,
                        "minItems": 0,
                        "maxItems": 0,
                        "items": [
                            {}
                        ],
                        "property1": null,
                        "property2": null
                    }
                },
                "categories": [
                    "string"
                ],
                "deprecated": false,
                "experimental": false,
                "exceptions": {
                    "Error Code1": {
                        "description": "string",
                        "message": "The value specified for the process argument '{argument}' in process '{process}' is invalid: {reason}",
                        "http": 400
                    },
                    "Error Code2": {
                        "description": "string",
                        "message": "The value specified for the process argument '{argument}' in process '{process}' is invalid: {reason}",
                        "http": 400
                    }
                },
                "examples": [
                    {
                        "title": "string",
                        "description": "string",
                        "arguments": {
                            "property1": {
                                "from_parameter": null,
                                "from_node": null,
                                "process_graph": null
                            },
                            "property2": {
                                "from_parameter": null,
                                "from_node": null,
                                "process_graph": null
                            }
                        },
                        "returns": null
                    }
                ],
                "links": [
                    {
                        "rel": "related",
                        "href": "https://openeo.example",
                        "type": "text/html",
                        "title": "openEO"
                    }
                ],
                "process_graph": {
                    "dc": {
                        "process_id": "load_collection",
                        "arguments": {
                            "id": "Sentinel-2",
                            "spatial_extent": {
                                "west": 16.1,
                                "east": 16.6,
                                "north": 48.6,
                                "south": 47.2
                            },
                            "temporal_extent": [
                                "2018-01-01",
                                "2018-02-01"
                            ]
                        }
                    },
                    "bands": {
                        "process_id": "filter_bands",
                        "description": "Filter and order the bands. The order is important for the following reduce operation.",
                        "arguments": {
                            "data": {
                                "from_node": "dc"
                            },
                            "bands": [
                                "B08",
                                "B04",
                                "B02"
                            ]
                        }
                    },
                    "evi": {
                        "process_id": "reduce",
                        "description": "Compute the EVI. Formula: 2.5 * (NIR - RED) / (1 + NIR + 6*RED + -7.5*BLUE)",
                        "arguments": {
                            "data": {
                                "from_node": "bands"
                            },
                            "dimension": "bands",
                            "reducer": {
                                "process_graph": {
                                    "nir": {
                                        "process_id": "array_element",
                                        "arguments": {
                                            "data": {
                                                "from_parameter": "data"
                                            },
                                            "index": 0
                                        }
                                    },
                                    "red": {
                                        "process_id": "array_element",
                                        "arguments": {
                                            "data": {
                                                "from_parameter": "data"
                                            },
                                            "index": 1
                                        }
                                    },
                                    "blue": {
                                        "process_id": "array_element",
                                        "arguments": {
                                            "data": {
                                                "from_parameter": "data"
                                            },
                                            "index": 2
                                        }
                                    },
                                    "sub": {
                                        "process_id": "subtract",
                                        "arguments": {
                                            "data": [
                                                {
                                                    "from_node": "nir"
                                                },
                                                {
                                                    "from_node": "red"
                                                }
                                            ]
                                        }
                                    },
                                    "p1": {
                                        "process_id": "product",
                                        "arguments": {
                                            "data": [
                                                6,
                                                {
                                                    "from_node": "red"
                                                }
                                            ]
                                        }
                                    },
                                    "p2": {
                                        "process_id": "product",
                                        "arguments": {
                                            "data": [
                                                -7.5,
                                                {
                                                    "from_node": "blue"
                                                }
                                            ]
                                        }
                                    },
                                    "sum": {
                                        "process_id": "sum",
                                        "arguments": {
                                            "data": [
                                                1,
                                                {
                                                    "from_node": "nir"
                                                },
                                                {
                                                    "from_node": "p1"
                                                },
                                                {
                                                    "from_node": "p2"
                                                }
                                            ]
                                        }
                                    },
                                    "div": {
                                        "process_id": "divide",
                                        "arguments": {
                                            "data": [
                                                {
                                                    "from_node": "sub"
                                                },
                                                {
                                                    "from_node": "sum"
                                                }
                                            ]
                                        }
                                    },
                                    "p3": {
                                        "process_id": "product",
                                        "arguments": {
                                            "data": [
                                                2.5,
                                                {
                                                    "from_node": "div"
                                                }
                                            ]
                                        },
                                        "result": true
                                    }
                                }
                            }
                        }
                    },
                    "mintime": {
                        "process_id": "reduce",
                        "description": "Compute a minimum time composite by reducing the temporal dimension",
                        "arguments": {
                            "data": {
                                "from_node": "evi"
                            },
                            "dimension": "temporal",
                            "reducer": {
                                "process_graph": {
                                    "min": {
                                        "process_id": "min",
                                        "arguments": {
                                            "data": {
                                                "from_parameter": "data"
                                            }
                                        },
                                        "result": true
                                    }
                                }
                            }
                        }
                    },
                    "save": {
                        "process_id": "save_result",
                        "arguments": {
                            "data": {
                                "from_node": "mintime"
                            },
                            "format": "GTiff"
                        },
                        "result": true
                    }
                }
            },
            "status": "finished",
            "progress": 75.5,
            "created": "2017-01-01T09:32:12Z",
            "updated": "2017-01-01T09:36:18Z",
            "plan": "free",
            "costs": 12.98,
            "budget": 100,
            "usage": {
                "cpu": {
                    "value": 40668,
                    "unit": "cpu-seconds"
                },
                "duration": {
                    "value": 2611,
                    "unit": "seconds"
                },
                "memory": {
                    "value": 108138811,
                    "unit": "mb-seconds"
                },
                "network": {
                    "value": 0,
                    "unit": "kb"
                },
                "storage": {
                    "value": 55,
                    "unit": "mb"
                }
            },
            "log_level": "warning",
            "links": [
                {
                    "rel": "result",
                    "type": "application/json",
                    "title": "Batch Job Results",
                    "href": "https://openeo.example/api/v1/jobs/123/logs"
                },
                {
                    "rel": "result",
                    "type": "application/json",
                    "title": "Batch Job Logs",
                    "href": "https://openeo.example/api/v1/jobs/123/logs"
                }
            ]
        }
    ],
    "links": [
        {
            "rel": "related",
            "href": "https://openeo.example",
            "type": "text/html",
            "title": "openEO"
        }
    ]
}